<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Missiles" xml:space="preserve">
    <value>// Missiles,,Unit Class,Pic Number,Tech Level,Year considered obsolete,Market avail.,Targettype,Move type,initiative,stealth,-,region code,equals 1,crew per squad,upgrade to,replaced by,refit to,-,move speed,-,?,?,tech prereq1,tech prereq1,days to build,cost to build,-,Ur Cost,Weight,-,-,movement range,,fuel cap,equals 1,warhead weight,att0,att1,att2,att3,att4,att5,att6,att7,att8,def0,def1,def2,def3,attrange0,attrange1,attrange2,attrange3,,,,,,,,,,,,,,,,,,,,,,-,,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,StratNuke,TacNuke,Missile Launch Authority,Guided Missile,No Build,defres,No Research,-,-,Missile launch platform,Missile Points size,Kt yeild,n/a,-,-,-,-,-,-,-,-,-,-,-,-,-,,,,,,,,,,,</value>
  </data>
  <data name="SR5ID" xml:space="preserve">
    <value>// SR5ID, ModelCode+EquipName, ClassNum, PicNum, (YearAvail - 1900), (OutOfProd - 1900), `market availability`, TargetType, MoveType, Initiative, StealthStr, CarrierCapacity, Regions, NumSquadInBatt, Crew, UGTo, ReplaceBy, RefitTo, AbandonTo, Speed, MisislePtsCapacity, SpotType1, SpotType2, TechReq1, TechReq2, DaysToBuild, Cost, IGCost, URCost, Weight, SupplyLevel, TransportCap, MoveRange, TurretArc, FuelCap, CombatTime, SupplyCap, SoftAttack, HardAttack, FortAttack, LowAirAttack, MidAirAttack, HighAirAttack, NavalSurfaceAttack, NavalSubAttack, CloseCombatAttack, GroundDefense, TacAirDefense, IndirectDefense, CloseDefense, GroundAttRange, AirAttRange, SurfaceAttRange, SubAttRange, UPGRADEUnit, MISSILEUnit, IndirectFlag, BalisticArt, NBCProt, TurretRot, LimitedFiringArc, TurretImmed, LongDeckCarrier, DirectDef, ECMEquipped, NoEffLossMove, RiverXing, Airdrop, AirTanker, AirRefuel, ShortDeckTakeOff, LongDeckTakeOff, Amphibious, 0, 0, BridgeBuild, UGDemol, EngineeringUnit, DockToUnload, StandOffUnit, MoveFirePenalty, NoLandCap, HasProduction, SupplyMoveOnly, LowVisibility, NavalPort, uBase, uIndustry, uUrban, uTransport, uBridging, uRubble, uSynth, 0, uContainer, OnePerHex, 0, StratNuke, TacNuke, MisLaunchAuth, GuidedMis, NoBuild, DefRes, NoResearch, UsesLargerPicSize, HasShadow, LaunchType, MisislePtsValue, NuclearYield, uContainX, uSpecialty, uEntrench, Pollution, uProdTech, uBuildCap, uStoreType, uStoreCap, GndMoveCost, NavalMoveCost, uRawSourceX, HexReq1, HexReq2, uBuildClassMask, FireSNDA, FireSNDB, FireSNDC, `Death sound`, `Move sound`, 0, `pic 1`, `pic 2`, `pic 3`, `pic 4`</value>
  </data>
  <data name="UNITS" xml:space="preserve">
    <value>// UNITS,Name,Unit Class,Pic Number,Tech Level,Year considered obsolete,Market avail.,Targettype,Move type,initiative,stealth,carrier capacity,region code,Battalion size,crew per squad,upgrade to,replaced by,refit to,-,move speed,missile capacity,spot type 1,spot type 2,tech prereq1,tech prereq2,days to build,cost to build,-,Ur Cost,Weight,-,cargo capacity,movement range,usused,fuel cap,combat time,ammo capacity,Soft,Hard,Fort,Close Air,Mid Air,High Air,Surface,Submerged,Close Combat,Ground Def,Air Def,Indirect Def,Close Combat Def,Land Att Range,Air Att Range,Sea Att Range,Sub Att Range,bupgrade,bmissileunit,bindirect,bballistic,NBC protected?,usused,blimitedarc,usused,baircarrier,bdirectdefenseonly,becmunit,unused,riverX,airdrop,Air Tanker,Air refueling probe,Short Deck Tackoff,Long Deck Tackoff,Amphib,reserved,reserved,Bridging,Upgrade Demolition,Engineering unit,Dock to unload,Stand Off unit,Move and Fire penalty,No Land Cap,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,,No Build,defres,No Research,useslargepicsize,unused,-,-,n/a,n/a,-,-,-,-,-,-,reserved,-,-,-,-,-,-,fireSNDA,fireSNDB,fireSNDC,DeathSND,MoveSND,unused,pic1,pic2,pic3,pic4,</value>
  </data>
  <data name="upgrades" xml:space="preserve">
    <value>// upgrades,,Unit Class,Pic Number,Tech Level,Year considered obsolete,Market avail.,Targettype,-,-,stealth,-,-,equals 1,crew per squad,upgrade to,replaced by,refit to,abandon too,-,-,spot type 1,spot type 1,tech prereq1,tech prereq1,days to build,cost to build,IG to build,Ur Cost,Weight,supply level,-,-,,-,combat time,ammo capacity,att0,att1,att2,att3,att4,att5,att6,att7,att8,def0,def1,def2,def3,attrange0,attrange1,attrange2,attrange3,,,,,,,,,,,,,,,,,,,,,,-,-,-,-,-,-,-,uHasProduction,supplymoveonly,Low Vis,Naval Port,Ubase,Uindustry,Uurban,Utransport,Ubridging,Urubble,Usynth,-,Ucontainer,OnePerHex,-,-,-,-,-,No Build,defres,No Research,-,-,-,-,n/a,compabible complex,uspecialty,Uentranch,pollution,uProdTech,build cap,ustoretype,-,grnd move cost,naval move cost,Bitmask for raw source product upgrades,required facility 1,required facility 2,buildclass,,,,,,,,,,,</value>
  </data>
</root>